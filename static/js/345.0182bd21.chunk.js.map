{"version":3,"file":"static/js/345.0182bd21.chunk.js","mappings":"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","sources":["components/Container/Container.jsx","components/Movie/Movie.styles.js","components/Movie/MovieItem/MovieItem.jsx","components/Movie/MovieList/MovieList.jsx","helper/pathImageStabilization.js","pages/Home/Home.styles.js","pages/Home/Home.jsx","service/api.service.js"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport styled from 'styled-components';\n\nconst MainContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n\n  max-width: 1170px;\n  margin-left: auto;\n  margin-right: auto;\n  padding-left: 15px;\n  padding-right: 15px;\n`;\n\nconst Container = ({ children }) => {\n  return <MainContainer>{children}</MainContainer>;\n};\n\nContainer.propTypes = {\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node,\n  ]).isRequired,\n};\n\nexport default Container;\n","import { NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const Link = styled(NavLink)`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n\n  text-decoration: none;\n  padding: 5px;\n  border-radius: 5px;\n  /* border-radius: 4px; */\n  color: black;\n  font-weight: 500;\n\n  &:hover {\n    color: white;\n    background-color: tomato;\n  }\n`;\n\nexport const List = styled.ul`\n  display: flex;\n  justify-content: center;\n  flex-wrap: wrap;\n  gap: 16px;\n`;\n\nexport const Item = styled.li`\n  flex-basis: calc((100% - 70px) / 5);\n`;\n","import React from 'react';\nimport { useLocation } from 'react-router-dom';\n\nimport PropTypes from 'prop-types';\n\nimport { pathImageStabilization } from 'helper/pathImageStabilization';\n\nimport { Item, Link } from '../Movie.styles';\n\nconst MovieItem = ({ id, poster_path, title }) => {\n  const location = useLocation();\n\n  return (\n    <Item key={id}>\n      <Link to={`/movies/${id}`} state={{ from: location }}>\n        <img\n          width=\"250\"\n          src={pathImageStabilization(poster_path)}\n          alt={title}\n        />\n\n        <p>{title}</p>\n      </Link>\n    </Item>\n  );\n};\n\nMovieItem.propTypes = {\n  id: PropTypes.number.isRequired,\n  poster_path: PropTypes.string,\n  title: PropTypes.string.isRequired,\n};\n\nexport default MovieItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport MovieItem from '../MovieItem/MovieItem';\n\nimport { List } from '../Movie.styles';\n\nconst MovieList = ({ films }) => {\n  return (\n    <List>\n      {films.map(({ id, title, poster_path }) => (\n        <MovieItem key={id} id={id} title={title} poster_path={poster_path} />\n      ))}\n    </List>\n  );\n};\n\nMovieList.propTypes = {\n  films: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n      poster_path: PropTypes.string,\n    })\n  ).isRequired,\n};\n\nexport default MovieList;\n","export const pathImageStabilization = pathImage => {\n  if (!pathImage) {\n    return 'https://upload.wikimedia.org/wikipedia/commons/thumb/6/65/No-Image-Placeholder.svg/1665px-No-Image-Placeholder.svg.png';\n  }\n\n  if (pathImage.includes('https')) {\n    return pathImage.slice(1, pathImage.length);\n  }\n\n  if (pathImage[0] === '/') {\n    return `https://image.tmdb.org/t/p/w500${pathImage}`;\n  }\n\n  return `https://image.tmdb.org/t/p/w500/${pathImage}`;\n};\n","import styled from 'styled-components';\n\nexport const Tittle = styled.h1`\n  margin-bottom: 16px;\n  padding: 10px;\n  border-radius: 5px;\n\n  color: white;\n  background-color: tomato;\n`;\n","import React, { useState, useEffect } from 'react';\nimport MovieList from '../../components/Movie/MovieList/MovieList';\n\nimport { api } from 'service/api.service';\nimport Container from '../../components/Container/Container';\nimport { Tittle } from './Home.styles';\n\nconst Home = () => {\n  const [films, setFilms] = useState([]);\n\n  useEffect(() => {\n    api.fetchFilms().then(({ data }) => {\n      setFilms(data.results);\n    });\n  }, []);\n\n  return (\n    <main>\n      <Container>\n        <Tittle>Trending today</Tittle>\n\n        {films.length > 0 && <MovieList films={films} />}\n      </Container>\n    </main>\n  );\n};\n\nexport default Home;\n","import axios from 'axios';\n\nconst API_KEY = 'd7ee9dda466bc4ced4432fb2e147fc44';\n\nconst BASE_URL = `https://api.themoviedb.org/3`;\n\nexport const fetchFilms = async () => {\n  try {\n    const url = `${BASE_URL}/trending/movie/day?api_key=${API_KEY}`;\n    const data = await axios.get(url);\n\n    return data;\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nexport const fetchFilmsByName = async filmName => {\n  try {\n    const url = `${BASE_URL}/search/movie?api_key=${API_KEY}&query=${filmName}`;\n    const data = await axios.get(url);\n\n    return data;\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nexport const fetchFilmById = async id => {\n  try {\n    const url = `${BASE_URL}/movie/${id}?api_key=${API_KEY}`;\n    const data = await axios.get(url);\n\n    return data;\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nexport const fetchFilmCast = async id => {\n  try {\n    const url = `${BASE_URL}/movie/${id}/credits?api_key=${API_KEY}`;\n    const data = await axios.get(url);\n\n    return data;\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nexport const fetchFilmReviews = async id => {\n  try {\n    const url = `${BASE_URL}/movie/${id}/reviews?api_key=${API_KEY}`;\n    const data = await axios.get(url);\n\n    return data;\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nexport const api = {\n  fetchFilms,\n  fetchFilmsByName,\n  fetchFilmById,\n  fetchFilmCast,\n  fetchFilmReviews,\n};\n"],"names":["MainContainer","styled","children","Link","NavLink","List","Item","id","poster_path","title","location","useLocation","to","state","from","width","src","pathImageStabilization","alt","films","map","pathImage","includes","slice","length","Tittle","useState","setFilms","useEffect","api","then","data","results","Container","MovieList","API_KEY","BASE_URL","fetchFilms","url","axios","console","error","fetchFilmsByName","filmName","fetchFilmById","fetchFilmCast","fetchFilmReviews"],"sourceRoot":""}