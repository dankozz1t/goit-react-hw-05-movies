{"version":3,"file":"static/js/523.f8701db0.chunk.js","mappings":"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","sources":["components/Container/Container.jsx","components/Movie/Movie.styles.js","components/Movie/MovieItem/MovieItem.jsx","components/Movie/MovieList/MovieList.jsx","helper/pathImageStabilization.js","components/Searchbar/Searchbar.styles.js","components/Searchbar/Searchbar.jsx","pages/Movies/Movies.jsx","service/api.service.js"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport styled from 'styled-components';\n\nconst MainContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n\n  max-width: 1170px;\n  margin-left: auto;\n  margin-right: auto;\n  padding-left: 15px;\n  padding-right: 15px;\n`;\n\nconst Container = ({ children }) => {\n  return <MainContainer>{children}</MainContainer>;\n};\n\nContainer.propTypes = {\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node,\n  ]).isRequired,\n};\n\nexport default Container;\n","import { NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const Link = styled(NavLink)`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n\n  text-decoration: none;\n  padding: 5px;\n  border-radius: 5px;\n  /* border-radius: 4px; */\n  color: black;\n  font-weight: 500;\n\n  &:hover {\n    color: white;\n    background-color: tomato;\n  }\n`;\n\nexport const List = styled.ul`\n  display: flex;\n  justify-content: center;\n  flex-wrap: wrap;\n  gap: 16px;\n`;\n\nexport const Item = styled.li`\n  flex-basis: calc((100% - 70px) / 5);\n`;\n","import React from 'react';\nimport { useLocation } from 'react-router-dom';\n\nimport PropTypes from 'prop-types';\n\nimport { pathImageStabilization } from 'helper/pathImageStabilization';\n\nimport { Item, Link } from '../Movie.styles';\n\nconst MovieItem = ({ id, poster_path, title }) => {\n  const location = useLocation();\n\n  return (\n    <Item key={id}>\n      <Link to={`/movies/${id}`} state={{ from: location }}>\n        <img\n          width=\"250\"\n          src={pathImageStabilization(poster_path)}\n          alt={title}\n        />\n\n        <p>{title}</p>\n      </Link>\n    </Item>\n  );\n};\n\nMovieItem.propTypes = {\n  id: PropTypes.number.isRequired,\n  poster_path: PropTypes.string,\n  title: PropTypes.string.isRequired,\n};\n\nexport default MovieItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport MovieItem from '../MovieItem/MovieItem';\n\nimport { List } from '../Movie.styles';\n\nconst MovieList = ({ films }) => {\n  return (\n    <List>\n      {films.map(({ id, title, poster_path }) => (\n        <MovieItem key={id} id={id} title={title} poster_path={poster_path} />\n      ))}\n    </List>\n  );\n};\n\nMovieList.propTypes = {\n  films: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n      poster_path: PropTypes.string,\n    })\n  ).isRequired,\n};\n\nexport default MovieList;\n","export const pathImageStabilization = (pathImage, height = 300) => {\n  if (!pathImage) {\n    return 'https://upload.wikimedia.org/wikipedia/commons/thumb/6/65/No-Image-Placeholder.svg/1665px-No-Image-Placeholder.svg.png';\n  }\n\n  if (pathImage.includes('https')) {\n    return pathImage.slice(1, pathImage.length);\n  }\n\n  if (pathImage[0] === '/') {\n    return `https://image.tmdb.org/t/p/w${height}${pathImage}`;\n  }\n\n  return `https://image.tmdb.org/t/p/w${height}/${pathImage}`;\n};\n","import styled from 'styled-components';\n\nexport const SearchForm = styled.form`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  max-width: 600px;\n  background-color: #fff;\n  border-radius: 3px;\n  overflow: hidden;\n`;\n\nexport const SearchFormButton = styled.button`\n  display: inline-block;\n  width: 48px;\n  height: 48px;\n  border: 0;\n  background-image: url('https://cdn-icons-png.flaticon.com/512/1086/1086933.png');\n  background-size: 40%;\n  background-repeat: no-repeat;\n  background-position: center;\n  opacity: 0.6;\n  transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  cursor: pointer;\n  outline: none;\n\n  &:hover {\n    opacity: 1;\n  }\n`;\n\nexport const SearchFormButtonLabel = styled.span`\n  position: absolute;\n  width: 1px;\n  height: 1px;\n  padding: 0;\n  overflow: hidden;\n  clip: rect(0, 0, 0, 0);\n  white-space: nowrap;\n  clip-path: inset(50%);\n  border: 0;\n`;\n\nexport const SearchFormInput = styled.input`\n  display: inline-block;\n  width: 100%;\n  font-size: 20px;\n  border: none;\n  outline: none;\n  padding-left: 4px;\n  padding-right: 4px;\n\n  &::placeholder {\n    font: inherit;\n    font-size: 18px;\n  }\n`;\n","import React, { useState } from 'react';\n\nimport PropTypes from 'prop-types';\n\nimport {\n  SearchForm,\n  SearchFormButton,\n  SearchFormButtonLabel,\n  SearchFormInput,\n} from './Searchbar.styles';\n\nconst Searchbar = ({ onSubmit, query }) => {\n  const [value, setValue] = useState(query);\n\n  const handleInputChange = e => {\n    setValue(e.target.value);\n  };\n\n  const handleFormSubmit = e => {\n    e.preventDefault();\n    onSubmit(value);\n    setValue('');\n  };\n\n  return (\n    <SearchForm onSubmit={handleFormSubmit}>\n      <SearchFormButton type=\"submit\">\n        <SearchFormButtonLabel>Search</SearchFormButtonLabel>\n      </SearchFormButton>\n\n      <SearchFormInput\n        type=\"text\"\n        autoComplete=\"off\"\n        autoFocus\n        placeholder=\"Search movies\"\n        value={value}\n        onChange={handleInputChange}\n      />\n    </SearchForm>\n  );\n};\n\nSearchbar.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n\nexport default Searchbar;\n","import React, { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\n\nimport { api } from 'service/api.service';\n\nimport MovieList from 'components/Movie/MovieList/MovieList';\nimport Searchbar from '../../components/Searchbar/Searchbar';\nimport Container from '../../components/Container/Container';\n\nconst Movies = () => {\n  const [films, setFilms] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [query, setQuery] = useState(searchParams.get('query') ?? '');\n\n  useEffect(() => {\n    if (query) {\n      try {\n        api.fetchFilmsByName(query).then(({ data }) => {\n          if (data.results.length === 0) {\n            setSearchParams('');\n          }\n\n          setFilms(data.results);\n        });\n      } catch (error) {\n        console.log(error);\n      }\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [query]);\n\n  const handleFormSubmit = query => {\n    setQuery(query);\n    setSearchParams(query !== '' ? { query } : {});\n  };\n\n  return (\n    <main>\n      <Container>\n        <Searchbar onSubmit={handleFormSubmit} query={query} />\n\n        {films.length > 0 && <MovieList films={films} />}\n      </Container>\n    </main>\n  );\n};\n\nexport default Movies;\n","import axios from 'axios';\n\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3',\n  params: {\n    api_key: 'd7ee9dda466bc4ced4432fb2e147fc44',\n  },\n});\nconst fetchFilms = () => instance.get(`/trending/movie/day`);\n\nconst fetchFilmsByName = query =>\n  instance.get(`/search/movie`, { params: { query } });\n\nconst fetchFilmById = id => instance.get(`/movie/${id}`);\n\nconst fetchFilmCast = id => instance.get(`/movie/${id}/credits`);\n\nconst fetchFilmReviews = id => instance.get(`/movie/${id}/reviews`);\n\nexport const api = {\n  fetchFilms,\n  fetchFilmsByName,\n  fetchFilmById,\n  fetchFilmCast,\n  fetchFilmReviews,\n};\n"],"names":["MainContainer","styled","children","Link","NavLink","List","Item","id","poster_path","title","location","useLocation","to","state","from","width","src","pathImageStabilization","alt","films","map","pathImage","height","includes","slice","length","SearchForm","SearchFormButton","SearchFormButtonLabel","SearchFormInput","onSubmit","query","useState","value","setValue","e","preventDefault","type","autoComplete","autoFocus","placeholder","onChange","target","setFilms","useSearchParams","searchParams","setSearchParams","get","setQuery","useEffect","api","then","data","results","error","console","log","Container","MovieList","instance","axios","baseURL","params","api_key","fetchFilms","fetchFilmsByName","fetchFilmById","fetchFilmCast","fetchFilmReviews"],"sourceRoot":""}