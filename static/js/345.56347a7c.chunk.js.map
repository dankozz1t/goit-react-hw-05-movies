{"version":3,"file":"static/js/345.56347a7c.chunk.js","mappings":"mLAKMA,EAAgBC,EAAAA,GAAAA,IAAH,6OAwBnB,IAXkB,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACnB,OAAO,SAACF,EAAD,UAAgBE,GACxB,C,yHCjBYC,GAAOF,EAAAA,EAAAA,IAAOG,EAAAA,GAAPH,CAAH,sUAmBJI,EAAOJ,EAAAA,GAAAA,GAAH,wGAOJK,EAAOL,EAAAA,GAAAA,GAAH,gE,SCIjB,EAxBkB,SAAC,GAAgC,IAA9BM,EAA6B,EAA7BA,GAAIC,EAAyB,EAAzBA,YAAaC,EAAY,EAAZA,MAC9BC,GAAWC,EAAAA,EAAAA,MAEjB,OACE,SAACL,EAAD,WACE,UAACH,EAAD,CAAMS,GAAE,kBAAaL,GAAMM,MAAO,CAAEC,KAAMJ,GAA1C,WACE,gBACEK,MAAM,MACNC,KAAKC,EAAAA,EAAAA,GAAuBT,GAC5BU,IAAKT,KAGP,uBAAIA,QARGF,EAYd,ECED,EApBkB,SAAC,GAAe,IAAbY,EAAY,EAAZA,MACnB,OACE,SAACd,EAAD,UACGc,EAAMC,KAAI,gBAAGb,EAAH,EAAGA,GAAIE,EAAP,EAAOA,MAAOD,EAAd,EAAcA,YAAd,OACT,SAAC,EAAD,CAAoBD,GAAIA,EAAIE,MAAOA,EAAOD,YAAaA,GAAvCD,EADP,KAKhB,C,uDCfM,IAAMU,EAAyB,SAACI,GAA2B,IAAhBC,EAAe,uDAAR,IACvD,OAAKD,EAIDA,EAAUE,SAAS,SACdF,EAAUG,MAAM,EAAGH,EAAUI,QAGjB,MAAjBJ,EAAU,GACN,+BAAN,OAAsCC,GAAtC,OAA6CD,GAGzC,+BAAN,OAAsCC,EAAtC,YAA8CD,GAXrC,wHAYV,C,oICZYK,E,QAASzB,GAAAA,GAAH,yI,SC6BnB,EAxBa,WACX,OAA0B0B,EAAAA,EAAAA,UAAS,IAAnC,eAAOR,EAAP,KAAcS,EAAd,KAYA,OAVAC,EAAAA,EAAAA,YAAU,WACR,IACEC,EAAAA,EAAAA,aAAiBC,MAAK,YAAe,IAAZC,EAAW,EAAXA,KACvBJ,EAASI,EAAKC,QACf,GAGF,CAFC,MAAOC,GACPC,QAAQC,IAAIF,EACb,CACF,GAAE,KAGD,2BACE,UAACG,EAAA,EAAD,YACE,SAACX,EAAD,6BAECP,EAAMM,OAAS,IAAK,SAACa,EAAA,EAAD,CAAWnB,MAAOA,QAI9C,C,qEC3BKoB,E,MAAWC,GAAAA,OAAa,CAC5BC,QAAS,+BACTC,OAAQ,CACNC,QAAS,sCAcAb,EAAM,CACjBc,WAZiB,kBAAML,EAASM,IAAT,sBAAN,EAajBC,iBAXuB,SAAAC,GAAK,OAC5BR,EAASM,IAAT,gBAA8B,CAAEH,OAAQ,CAAEK,MAAAA,IADd,EAY5BC,cAToB,SAAAzC,GAAE,OAAIgC,EAASM,IAAT,iBAAuBtC,GAA3B,EAUtB0C,cARoB,SAAA1C,GAAE,OAAIgC,EAASM,IAAT,iBAAuBtC,EAAvB,YAAJ,EAStB2C,iBAPuB,SAAA3C,GAAE,OAAIgC,EAASM,IAAT,iBAAuBtC,EAAvB,YAAJ,E","sources":["components/Container/Container.jsx","components/Movie/Movie.styles.js","components/Movie/MovieItem/MovieItem.jsx","components/Movie/MovieList/MovieList.jsx","helper/pathImageStabilization.js","pages/Home/Home.styles.js","pages/Home/Home.jsx","service/api.service.js"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport styled from 'styled-components';\n\nconst MainContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n\n  max-width: 1170px;\n  margin-left: auto;\n  margin-right: auto;\n  padding-left: 15px;\n  padding-right: 15px;\n`;\n\nconst Container = ({ children }) => {\n  return <MainContainer>{children}</MainContainer>;\n};\n\nContainer.propTypes = {\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node,\n  ]).isRequired,\n};\n\nexport default Container;\n","import { NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const Link = styled(NavLink)`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n\n  text-decoration: none;\n  padding: 5px;\n  border-radius: 5px;\n  /* border-radius: 4px; */\n  color: black;\n  font-weight: 500;\n\n  &:hover {\n    color: white;\n    background-color: tomato;\n  }\n`;\n\nexport const List = styled.ul`\n  display: flex;\n  justify-content: center;\n  flex-wrap: wrap;\n  gap: 16px;\n`;\n\nexport const Item = styled.li`\n  flex-basis: calc((100% - 70px) / 5);\n`;\n","import React from 'react';\nimport { useLocation } from 'react-router-dom';\n\nimport PropTypes from 'prop-types';\n\nimport { pathImageStabilization } from 'helper/pathImageStabilization';\n\nimport { Item, Link } from '../Movie.styles';\n\nconst MovieItem = ({ id, poster_path, title }) => {\n  const location = useLocation();\n\n  return (\n    <Item key={id}>\n      <Link to={`/movies/${id}`} state={{ from: location }}>\n        <img\n          width=\"250\"\n          src={pathImageStabilization(poster_path)}\n          alt={title}\n        />\n\n        <p>{title}</p>\n      </Link>\n    </Item>\n  );\n};\n\nMovieItem.propTypes = {\n  id: PropTypes.number.isRequired,\n  poster_path: PropTypes.string,\n  title: PropTypes.string.isRequired,\n};\n\nexport default MovieItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport MovieItem from '../MovieItem/MovieItem';\n\nimport { List } from '../Movie.styles';\n\nconst MovieList = ({ films }) => {\n  return (\n    <List>\n      {films.map(({ id, title, poster_path }) => (\n        <MovieItem key={id} id={id} title={title} poster_path={poster_path} />\n      ))}\n    </List>\n  );\n};\n\nMovieList.propTypes = {\n  films: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n      poster_path: PropTypes.string,\n    })\n  ).isRequired,\n};\n\nexport default MovieList;\n","export const pathImageStabilization = (pathImage, size = 300) => {\n  if (!pathImage) {\n    return 'https://upload.wikimedia.org/wikipedia/commons/thumb/6/65/No-Image-Placeholder.svg/1665px-No-Image-Placeholder.svg.png';\n  }\n\n  if (pathImage.includes('https')) {\n    return pathImage.slice(1, pathImage.length);\n  }\n\n  if (pathImage[0] === '/') {\n    return `https://image.tmdb.org/t/p/w${size}${pathImage}`;\n  }\n\n  return `https://image.tmdb.org/t/p/w${size}/${pathImage}`;\n};\n","import styled from 'styled-components';\n\nexport const Tittle = styled.h1`\n  margin-bottom: 16px;\n  padding: 10px;\n  border-radius: 5px;\n\n  color: white;\n  background-color: tomato;\n`;\n","import React, { useState, useEffect } from 'react';\nimport MovieList from '../../components/Movie/MovieList/MovieList';\n\nimport { api } from 'service/api.service';\nimport Container from '../../components/Container/Container';\nimport { Tittle } from './Home.styles';\n\nconst Home = () => {\n  const [films, setFilms] = useState([]);\n\n  useEffect(() => {\n    try {\n      api.fetchFilms().then(({ data }) => {\n        setFilms(data.results);\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  }, []);\n\n  return (\n    <main>\n      <Container>\n        <Tittle>Trending today</Tittle>\n\n        {films.length > 0 && <MovieList films={films} />}\n      </Container>\n    </main>\n  );\n};\n\nexport default Home;\n","import axios from 'axios';\n\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3',\n  params: {\n    api_key: 'd7ee9dda466bc4ced4432fb2e147fc44',\n  },\n});\nconst fetchFilms = () => instance.get(`/trending/movie/day`);\n\nconst fetchFilmsByName = query =>\n  instance.get(`/search/movie`, { params: { query } });\n\nconst fetchFilmById = id => instance.get(`/movie/${id}`);\n\nconst fetchFilmCast = id => instance.get(`/movie/${id}/credits`);\n\nconst fetchFilmReviews = id => instance.get(`/movie/${id}/reviews`);\n\nexport const api = {\n  fetchFilms,\n  fetchFilmsByName,\n  fetchFilmById,\n  fetchFilmCast,\n  fetchFilmReviews,\n};\n"],"names":["MainContainer","styled","children","Link","NavLink","List","Item","id","poster_path","title","location","useLocation","to","state","from","width","src","pathImageStabilization","alt","films","map","pathImage","size","includes","slice","length","Tittle","useState","setFilms","useEffect","api","then","data","results","error","console","log","Container","MovieList","instance","axios","baseURL","params","api_key","fetchFilms","get","fetchFilmsByName","query","fetchFilmById","fetchFilmCast","fetchFilmReviews"],"sourceRoot":""}