{"version":3,"file":"static/js/771.15f58679.chunk.js","mappings":"uKAAO,IAAMA,EAAyB,SAACC,GAA2B,IAAhBC,EAAe,uDAAR,IACvD,OAAKD,EAIDA,EAAUE,SAAS,SACdF,EAAUG,MAAM,EAAGH,EAAUI,QAGjB,MAAjBJ,EAAU,GACN,+BAAN,OAAsCC,GAAtC,OAA6CD,GAGzC,+BAAN,OAAsCC,EAAtC,YAA8CD,GAXrC,wHAYV,C,iJCZYK,EAAOC,EAAAA,GAAAA,GAAH,mIAQJC,EAAOD,EAAAA,GAAAA,GAAH,wDAKJE,EAAOF,EAAAA,GAAAA,IAAH,uI,SCoCjB,EA1Ca,WACX,OAAwBG,EAAAA,EAAAA,UAAS,CAAC,GAAlC,eAAOC,EAAP,KAAaC,EAAb,KAEQC,GAAOC,EAAAA,EAAAA,MAAPD,GAYR,OAVAE,EAAAA,EAAAA,YAAU,WACR,IACEC,EAAAA,EAAAA,cAAkBH,GAAII,MAAK,YAAe,IAAZC,EAAW,EAAXA,KAC5BN,EAAQM,EAAKP,KACd,GAGF,CAFC,MAAOQ,GACPC,QAAQC,IAAIF,EACb,CACF,GAAE,CAACN,IAE6B,IAA7BS,OAAOC,KAAKZ,GAAMN,QACb,uFAIP,SAACC,EAAD,UACGK,EAAKa,KAAI,SAAAC,GAAM,OACd,UAACjB,EAAD,YACE,gBACEkB,MAAM,MACNC,OAAO,MACPC,KAAK5B,EAAAA,EAAAA,GAAuByB,EAAOI,aAAc,KACjDC,IAAKL,EAAOM,iBAEd,UAACtB,EAAD,YACE,wBAAKgB,EAAOM,cAAgBN,EAAOM,cAAgB,aACnD,0BACE,uCAAmB,IAClBN,EAAOO,UAAYP,EAAOO,UAAY,kBAXlCP,EAAOZ,GADJ,KAmBrB,C,qEC/CKoB,E,MAAWC,GAAAA,OAAa,CAC5BC,QAAS,+BACTC,OAAQ,CACNC,QAAS,sCAcArB,EAAM,CACjBsB,WAZiB,kBAAML,EAASM,IAAT,sBAAN,EAajBC,iBAXuB,SAAAC,GAAK,OAC5BR,EAASM,IAAT,gBAA8B,CAAEH,OAAQ,CAAEK,MAAAA,IADd,EAY5BC,cAToB,SAAA7B,GAAE,OAAIoB,EAASM,IAAT,iBAAuB1B,GAA3B,EAUtB8B,cARoB,SAAA9B,GAAE,OAAIoB,EAASM,IAAT,iBAAuB1B,EAAvB,YAAJ,EAStB+B,iBAPuB,SAAA/B,GAAE,OAAIoB,EAASM,IAAT,iBAAuB1B,EAAvB,YAAJ,E","sources":["helper/pathImageStabilization.js","pages/Movies/Cast/Cast.styles.js","pages/Movies/Cast/Cast.jsx","service/api.service.js"],"sourcesContent":["export const pathImageStabilization = (pathImage, size = 300) => {\n  if (!pathImage) {\n    return 'https://upload.wikimedia.org/wikipedia/commons/thumb/6/65/No-Image-Placeholder.svg/1665px-No-Image-Placeholder.svg.png';\n  }\n\n  if (pathImage.includes('https')) {\n    return pathImage.slice(1, pathImage.length);\n  }\n\n  if (pathImage[0] === '/') {\n    return `https://image.tmdb.org/t/p/w${size}${pathImage}`;\n  }\n\n  return `https://image.tmdb.org/t/p/w${size}/${pathImage}`;\n};\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  flex-wrap: wrap;\n  gap: 10px;\n`;\n\nexport const Item = styled.li`\n  display: flex;\n  gap: 20px;\n`;\n\nexport const Info = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n  align-items: center;\n  justify-content: center;\n`;\n","import React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport { api } from 'service/api.service';\n\nimport { pathImageStabilization } from '../../../helper/pathImageStabilization';\n\nimport { List, Item, Info } from './Cast.styles';\n\nconst Cast = () => {\n  const [cast, setCast] = useState({});\n\n  const { id } = useParams();\n\n  useEffect(() => {\n    try {\n      api.fetchFilmCast(id).then(({ data }) => {\n        setCast(data.cast);\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  }, [id]);\n\n  if (Object.keys(cast).length === 0) {\n    return <p>We don't have any information about cast for this movie :(</p>;\n  }\n\n  return (\n    <List>\n      {cast.map(person => (\n        <Item key={person.id}>\n          <img\n            width=\"154\"\n            height=\"154\"\n            src={pathImageStabilization(person.profile_path, 154)}\n            alt={person.original_name}\n          />\n          <Info>\n            <h3>{person.original_name ? person.original_name : 'No Info'}</h3>\n            <p>\n              <b>Character: </b>{' '}\n              {person.character ? person.character : 'No Info'}\n            </p>\n          </Info>\n        </Item>\n      ))}\n    </List>\n  );\n};\n\nexport default Cast;\n","import axios from 'axios';\n\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3',\n  params: {\n    api_key: 'd7ee9dda466bc4ced4432fb2e147fc44',\n  },\n});\nconst fetchFilms = () => instance.get(`/trending/movie/day`);\n\nconst fetchFilmsByName = query =>\n  instance.get(`/search/movie`, { params: { query } });\n\nconst fetchFilmById = id => instance.get(`/movie/${id}`);\n\nconst fetchFilmCast = id => instance.get(`/movie/${id}/credits`);\n\nconst fetchFilmReviews = id => instance.get(`/movie/${id}/reviews`);\n\nexport const api = {\n  fetchFilms,\n  fetchFilmsByName,\n  fetchFilmById,\n  fetchFilmCast,\n  fetchFilmReviews,\n};\n"],"names":["pathImageStabilization","pathImage","size","includes","slice","length","List","styled","Item","Info","useState","cast","setCast","id","useParams","useEffect","api","then","data","error","console","log","Object","keys","map","person","width","height","src","profile_path","alt","original_name","character","instance","axios","baseURL","params","api_key","fetchFilms","get","fetchFilmsByName","query","fetchFilmById","fetchFilmCast","fetchFilmReviews"],"sourceRoot":""}